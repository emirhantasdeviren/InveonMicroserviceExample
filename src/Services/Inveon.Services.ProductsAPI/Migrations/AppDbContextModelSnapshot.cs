// <auto-generated />
using System;
using Inveon.Services.ProductsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inveon.Services.ProductsAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inveon.Services.ProductsAPI.Models.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f2e27fc-e22f-4e93-96ad-b3fce779d4bd"),
                            CategoryName = "Appetizer",
                            CreatedAt = new DateTime(2023, 11, 1, 19, 27, 24, 770, DateTimeKind.Utc).AddTicks(7874),
                            Description = "Praesent scelerisque, mi sed ultrices condimentum, lacus ipsum viverra massa, in lobortis sapien eros in arcu. Quisque vel lacus ac magna vehicula sagittis ut non lacus.<br/>Sed volutpat tellus lorem, lacinia tincidunt tellus varius nec. Vestibulum arcu turpis, facilisis sed ligula ac, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            ImagePath = "samosa.jpg",
                            Name = "Samosa",
                            Price = 15.0,
                            UpdatedAt = new DateTime(2023, 11, 1, 19, 27, 24, 770, DateTimeKind.Utc).AddTicks(7875)
                        },
                        new
                        {
                            Id = new Guid("f3d2eade-a3f4-4b51-9d85-d4a4fa3002b6"),
                            CategoryName = "Appetizer",
                            CreatedAt = new DateTime(2023, 11, 1, 19, 27, 24, 770, DateTimeKind.Utc).AddTicks(7904),
                            Description = "Praesent scelerisque, mi sed ultrices condimentum, lacus ipsum viverra massa, in lobortis sapien eros in arcu. Quisque vel lacus ac magna vehicula sagittis ut non lacus.<br/>Sed volutpat tellus lorem, lacinia tincidunt tellus varius nec. Vestibulum arcu turpis, facilisis sed ligula ac, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            ImagePath = "panertikka.jpg",
                            Name = "Paneer Tikka",
                            Price = 13.99,
                            UpdatedAt = new DateTime(2023, 11, 1, 19, 27, 24, 770, DateTimeKind.Utc).AddTicks(7904)
                        },
                        new
                        {
                            Id = new Guid("27e1d3ca-fb77-41bc-a6fc-2a8f613fdbd7"),
                            CategoryName = "Dessert",
                            CreatedAt = new DateTime(2023, 11, 1, 19, 27, 24, 770, DateTimeKind.Utc).AddTicks(7949),
                            Description = "Praesent scelerisque, mi sed ultrices condimentum, lacus ipsum viverra massa, in lobortis sapien eros in arcu. Quisque vel lacus ac magna vehicula sagittis ut non lacus.<br/>Sed volutpat tellus lorem, lacinia tincidunt tellus varius nec. Vestibulum arcu turpis, facilisis sed ligula ac, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            ImagePath = "sweetpie.jpg",
                            Name = "Sweet Pie",
                            Price = 10.99,
                            UpdatedAt = new DateTime(2023, 11, 1, 19, 27, 24, 770, DateTimeKind.Utc).AddTicks(7949)
                        },
                        new
                        {
                            Id = new Guid("a44fe600-0fa0-4fab-9aaa-3b81838b3eb8"),
                            CategoryName = "Entree",
                            CreatedAt = new DateTime(2023, 11, 1, 19, 27, 24, 770, DateTimeKind.Utc).AddTicks(7960),
                            Description = "Praesent scelerisque, mi sed ultrices condimentum, lacus ipsum viverra massa, in lobortis sapien eros in arcu. Quisque vel lacus ac magna vehicula sagittis ut non lacus.<br/>Sed volutpat tellus lorem, lacinia tincidunt tellus varius nec. Vestibulum arcu turpis, facilisis sed ligula ac, maximus malesuada neque. Phasellus commodo cursus pretium.",
                            ImagePath = "pavbhaji.jpg",
                            Name = "Pav Bhaji",
                            Price = 15.0,
                            UpdatedAt = new DateTime(2023, 11, 1, 19, 27, 24, 770, DateTimeKind.Utc).AddTicks(7961)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
